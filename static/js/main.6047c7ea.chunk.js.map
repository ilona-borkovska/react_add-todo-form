{"version":3,"sources":["api/users.ts","api/todos.ts","services/todo.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","getNewTodosId","todos","Math","max","map","todo","UserInfo","user","usersFromServer","find","getUserById","className","href","TodoInfo","cn","TodoList","App","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","newValue","target","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6047c7ea.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../types/todo';\nimport usersFromServer from '../api/users';\n\nexport function getNewTodosId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import { getUserById } from '../../services/todo';\n\ntype Props = {\n  userId: number,\n};\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const user = getUserById(userId);\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo userId={todo.userId} />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { getNewTodosId } from './services/todo';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title || !userId) {\n      setHasTitleError(!title);\n      setHasUserIdError(!userId);\n\n      return;\n    }\n\n    setTodos([...todos, {\n      id: getNewTodosId(todos),\n      title,\n      completed: false,\n      userId,\n    }]);\n\n    resetForm();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const pattern = /[^a-zабвгґдеєжзиіїйклмнопрстуфхцчшщьюя0-9\\s']()/gi;\n    const newValue = event.target.value;\n\n    setTitle(newValue.replace(pattern, ''));\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"field__label\">\n            Title:\n          </label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\" className=\"field__label\">\n            User:\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}